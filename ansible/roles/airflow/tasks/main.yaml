---

- name:
  file:
     path: '{{ airflow_home }}'     
     state: directory
     owner: '{{ airflow_user }}'   
     group: '{{ airflow_group }}'

- name: install apache-airflow
  pip:
     name: '{{ item }}'      
  loop:
     - 'apache-airflow=={{ airflow_version }}'
     - apache-airflow[crypto]       
     - psycopg2-binary  

- name: copy  airflow config files
  template: src='{{ item.src }}' dest='{{ item.dest }}' owner='{{ airflow_user }}'  group='{{ application_group }}' mode=0750
  loop:
     - { src: 'airflow-scheduler.service.j2', dest: '/etc/systemd/system/airflow-scheduler.service'  }
     - { src: 'airflow-webserver.service.j2', dest: '/etc/systemd/system/airflow-webserver.service'  }
     - { src: 'airflow_env.sh.j2', dest: '{{ airflow_home }}/airflow_env.sh'  }
     - { src: 'airflow_fuse.sh.j2', dest: '{{ airflow_home }}/airflow_fuse.sh'  }
  notify: 
     - restart airflow_scheduler      
     - restart airflow_webserver     

- name: Reload service files
  systemd:
    daemon_reload: true       

- name: Check that the airlfow dag home exists
  stat:
      path: '{{ airflow_dag_dir }}'
  register: dag_stat_result
       
- name: create airflow dag directory 
  file:
     path: '{{ airflow_dag_dir }}'
     state: directory
     owner: '{{ airflow_user }}'   
     group: '{{ application_group }}'
  when: not dag_stat_result.stat.exists   
