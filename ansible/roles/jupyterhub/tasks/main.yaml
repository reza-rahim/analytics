---

- name: check for '{{ jupyterhub_notebook_dir }}'
  stat:
     path: '{{ jupyterhub_notebook_dir }}'
  register: jupyterhub_notebook_dir_stat_result

- name: create {{ jupyterhub_notebook_dir }}
  file:
     path: '{{ jupyterhub_notebook_dir }}'
     state: directory
     owner: '{{ jupyterhub_user }}'
     group: '{{ jupyterhub_group }}'
  when: not jupyterhub_notebook_dir_stat_result.stat.exists

- name: Create /etc/jupyterhub
  file: 
     path:  /etc/jupyterhub
     state: directory

- name: check for nodejs
  stat: 
     path: /usr/bin/node 
  register: stat_result   


- name: install nodejs part 1
  get_url:
    url:  https://deb.nodesource.com/setup_19.x
    dest: /tmp/
  when: not stat_result.stat.exists  

- name: install nodejs part 2
  shell: bash /tmp/setup_19.x
  when: not stat_result.stat.exists

- name: Install nodeja and python3-pip 
  apt:
    name: '{{ item }}'
    update_cache: yes
  loop:
    - nodejs
    - python3-pip      

      
- name: install jupyterhub and notebook
  pip: 
    name: '{{ item }}'
  loop:
    - jupyterhub      
    - JupyterLab
    - oauthenticator
    - pyspark
    - numpy 
    - pandas
    - plotly 
    - seaborn 
    - matplotlib   
    - pyarrow  
    - scikit-learn 
    - scikit-image
    - pymc
    - statsmodels  
    - s3cmd
    - ipython-sql
    - sqlalchemy
    - sparksql-magic  
    - sqlalchemy-trino
    - clickhouse-driver
    - clickhouse-sqlalchemy
    - tensorflow  

- name: install configurable-http-proxy
  npm:
    name: configurable-http-proxy      
    global: yes

- name: copy  service and config file
  template: src='{{ item.src }}' dest='{{ item.dest }}' mode=0750 group='{{ application_group }}'
  loop:
     - { src: 'jupyterhub.service.j2', dest: '/etc/systemd/system/jupyterhub.service'  }      
     - { src: 'jupyterhub_config_simple.py.j2', dest: '/etc/jupyterhub/jupyterhub_config_simple.py'  }      
     - { src: 'jupyterhub_fuse.sh.j2', dest: '/etc/jupyterhub/jupyterhub_fuse.sh'  }      
  notify: restart jupyterhub 

- name: Reload service files
  systemd:
    daemon_reload: true  


